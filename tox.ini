[tox]
skipsdist = true
envlist = py27, flake8

[testenv]
recreate = True
passenv = DISPLAY
deps = -rrequirements/requirements.txt
commands = pytest --driver=Firefox {posargs}

[testenv:listedit]
recreate = True
passenv = DISPLAY GITHUB_ACCESS_TOKEN
setenv = TEST_ENV=stage
deps = -rrequirements/requirements.txt
commands = pytest --driver=Firefox --pref-set="base" --channel="nightly" tests/test_list_edit.py -s

[testenv:filesize]
recreate = True
passenv = DISPLAY GITHUB_ACCESS_TOKEN
setenv = TEST_ENV=stage
deps = -rrequirements/requirements.txt
commands = pytest --channel="nightly" --pref-set="moztestpub" --driver=Firefox tests/test_filesize.py -s

[testenv:tracking-protection]
recreate = True
passenv = DISPLAY GITHUB_ACCESS_TOKEN
setenv = TEST_ENV=stage
#setenv = TEST_ENV=prod
deps = -rrequirements/requirements.txt
commands = pytest --channel="nightly" --pref-set="base" tests/test_tracking_protection.py -s -v

[testenv:blacklistedit]
recreate = True
passenv = DISPLAY GITHUB_ACCESS_TOKEN
setenv = TEST_ENV=stage
deps = -rrequirements/requirements.txt
commands = pytest --channel="nightly" --pref-set="moztestpub" tests/test_blacklist_edit.py -s 

[testenv:whitelistedit]
recreate = True
passenv = DISPLAY GITHUB_ACCESS_TOKEN
setenv = TEST_ENV=stage
deps = -rrequirements/requirements.txt
commands = pytest --channel="nightly" --pref-set="moztestpub" tests/test_whitelist_edit.py -s 

[testenv:itisatrap-page]
recreate = True
setenv = TEST_ENV=stage
passenv = DISPLAY GITHUB_ACCESS_TOKEN
deps = -rrequirements/requirements.txt
commands = pytest --channel="nightly" --pref-set="base" --driver=Firefox tests/test_itisatrap_page.py -s

[testenv:shield-display]
recreate = True
#setenv = TEST_ENV=stage
setenv = TEST_ENV=prod
passenv = DISPLAY GITHUB_ACCESS_TOKEN
deps = -rrequirements/requirements.txt
commands = pytest --channel="nightly" --pref-set="base" --driver=Firefox tests/test_shield_display.py -s

[testenv:flake8]
skip_install = true
deps = -rrequirements/flake8.txt
commands = flake8 {posargs:.}

[flake8]
exclude = .tox, docs

[testenv:clean]
whitelist_externals=bash
commands=
    bash -c "rm -Rf **/*__pycache__"
    bash -c "rm -Rf **/*.pyc"
    bash -c "rm -Rf venv"

[testenv:docker-build]
commands = docker build -t firefoxtesteng/shavar-e2e-tests:latest .

[testenv:docker-push]
commands = docker push firefoxtesteng/shavar-e2e-tests:latest

[testenv:docker-run]
commands = docker run -t firefoxtesteng/shavar-e2e-tests

[pytest]
addopts = --verbose -r=a
testpaths = tests
xfail_strict = true
